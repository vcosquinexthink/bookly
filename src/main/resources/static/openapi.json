{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Books API",
      "description": "Endpoints for managing books in the catalog"
    },
    {
      "name": "Bookstores API",
      "description": "Endpoints for managing bookstore locations and information"
    },
    {
      "name": "Public Inventory Search API",
      "description": "Public endpoints for searching book availability across all bookstores"
    },
    {
      "name": "Bookstore Inventory API",
      "description": "Endpoints for managing inventory within specific bookstores"
    }
  ],
  "paths": {
    "/bookly/bookstores": {
      "post": {
        "tags": [
          "Bookstores API"
        ],
        "summary": "Create a new bookstore",
        "description": "Register a new bookstore location in the system with name and location information",
        "operationId": "createBookstore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookstoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Bookstore created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BookstoreDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bookstore data provided"
          }
        }
      }
    },
    "/bookly/bookstores/{bookstoreId}/book/{isbn}/stock": {
      "post": {
        "tags": [
          "Bookstore Inventory API"
        ],
        "summary": "Add stock for a book in a bookstore",
        "description": "Increase the inventory stock for a specific book (by ISBN) in a bookstore by the specified quantity. If the book doesn't exist in the bookstore's inventory, it will be added.",
        "operationId": "updateInventory",
        "parameters": [
          {
            "name": "bookstoreId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "description": "Number of units to stock (default: 1)",
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "default": "1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book stocked successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDto"
                }
              }
            }
          },
          "404": {
            "description": "Bookstore or book not found"
          }
        }
      }
    },
    "/bookly/books": {
      "post": {
        "tags": [
          "Books API"
        ],
        "summary": "Create a new book",
        "description": "Register a new book in the catalog system with ISBN, title, and author information",
        "operationId": "createBook",
        "requestBody": {
          "description": "Book information including ISBN, title, and author",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BookDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid book data provided"
          },
          "409": {
            "description": "Book with this ISBN already exists"
          }
        }
      }
    },
    "/bookly/inventory/search": {
      "get": {
        "tags": [
          "Public Inventory Search API"
        ],
        "summary": "Search for book availability by ISBN and location",
        "description": "Find all available copies of a specific book (by ISBN) across all bookstores in the system, ordered by proximity to the specified location. Returns inventory details including stock levels and bookstore information.",
        "operationId": "searchInventoryByIsbnAndLocation",
        "parameters": [
          {
            "name": "isbn",
            "in": "query",
            "description": "ISBN-13 or ISBN-10 of the book to search for",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "978-0134685991"
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location code for proximity-based ordering of results",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 12345
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory search completed successfully. Returns list of available inventory items ordered by proximity.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryItemDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No book found with the specified ISBN"
          },
          "400": {
            "description": "Invalid ISBN format or location parameter"
          }
        }
      }
    },
    "/bookly/bookstores/{bookstoreId}/inventory": {
      "get": {
        "tags": [
          "Bookstore Inventory API"
        ],
        "summary": "Get complete inventory for a bookstore",
        "description": "Retrieve the full inventory list of all books available in a specific bookstore, showing stock levels and availability for each book",
        "operationId": "getBookstoreInventory",
        "parameters": [
          {
            "name": "bookstoreId",
            "in": "path",
            "description": "Unique identifier of the bookstore",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bookstore inventory retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryItemDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bookstore not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/bookly/bookstores/{bookstoreId}/book/{isbn}/inventory": {
      "get": {
        "tags": [
          "Bookstore Inventory API"
        ],
        "summary": "Get book inventory for a specific book in a bookstore",
        "description": "Retrieve detailed inventory information for a specific book (by ISBN) within a particular bookstore, including total stock and available quantity",
        "operationId": "getBookInventory",
        "parameters": [
          {
            "name": "bookstoreId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book inventory retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDto"
                }
              }
            }
          },
          "404": {
            "description": "Bookstore or book not found"
          }
        }
      }
    },
    "/bookly/bookstores/search": {
      "get": {
        "tags": [
          "Bookstores API"
        ],
        "summary": "Search bookstores by proximity to location",
        "description": "Retrieve all bookstores in the system ordered by their proximity to a specified location code, with closest bookstores appearing first",
        "operationId": "searchBookstoresByProximity",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "Location code for proximity search",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bookstores retrieved and ordered by proximity successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookstoreDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid location parameter provided"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateBookstoreRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "location",
          "name"
        ]
      },
      "BookstoreDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "location": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "id",
          "location",
          "name"
        ]
      },
      "BookDto": {
        "type": "object",
        "properties": {
          "isbn": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          }
        },
        "required": [
          "author",
          "isbn",
          "title"
        ]
      },
      "InventoryItemDto": {
        "type": "object",
        "properties": {
          "book": {
            "$ref": "#/components/schemas/BookDto"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "available": {
            "type": "integer",
            "format": "int32"
          },
          "bookstore": {
            "$ref": "#/components/schemas/BookstoreDto"
          }
        },
        "required": [
          "available",
          "book",
          "bookstore",
          "total"
        ]
      }
    }
  }
}